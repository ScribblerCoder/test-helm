████████████████████████████████████████████████████████████████████████
██      ___           ___           ___                       ___     ██
██     /  /\         /  /\         /  /\          ___        /  /\    ██
██    /  /:/_       /  /::|       /  /:/         /  /\      /  /:/_   ██
██   /  /:/ /\     /  /:/:|      /  /:/         /  /:/     /  /:/ /\  ██
██  /  /:/_/::\   /  /:/|:|__   /  /:/  ___    /  /:/     /  /:/ /:/  ██
██ /__/:/__\/\:\ /__/:/ |:| /\ /__/:/  /  /\  /  /::\    /__/:/ /:/   ██
██ \  \:\ /~~/:/ \__\/  |:|/:/ \  \:\ /  /:/ /__/:/\:\   \  \:\/:/    ██
██  \  \:\  /:/      |  |:/:/   \  \:\  /:/  \__\/  \:\   \  \::/     ██
██   \  \:\/:/       |  |::/     \  \:\/:/        \  \:\   \  \:\     ██
██    \  \::/        |  |:/       \  \::/          \__\/    \  \:\    ██
██     \__\/         |__|/         \__\/                     \__\/    ██
██                                                                    ██
████████████████████████████████████████████████████████████████████████

       GZCTF © 2025-present GZTimeWalker      GZCTF {{ .Values.gzctf.image.tag }} 

1. Get the application URL by running these commands:
{{- if .Values.gzctf.ingress.enabled }}
{{- range $host := .Values.gzctf.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.gzctf.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.gzctf.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "gzctf.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.gzctf.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "gzctf.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "gzctf.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.gzctf.service.port }}
{{- else if contains "ClusterIP" .Values.gzctf.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "gzctf.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
